# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 1000
      min-spare: 30
  port: 8002
  servlet:
    context-path: /toy
    session:
      cookie:
        http-only: true

spring:
  # 环境 dev|test|prod
  # Profile will be set by SPRING_PROFILES_ACTIVE environment variable
  # Default to 'dev' if not specified
  profiles:
    default: dev
  messages:
    encoding: UTF-8
    basename: i18n/messages
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
  main:
    allow-bean-definition-overriding: true

  # Local Docker Database Configuration
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3307/manager_api?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true&useSSL=false&allowPublicKeyRetrieval=true
      username: manager
      password: managerpassword

      initial-size: 5
      max-active: 20
      min-idle: 5
      max-wait: 6000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: false
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true

  data:
    redis:
      host: localhost
      port: 6380
      password: redispassword
      database: 0
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
        shutdown-timeout: 100ms

knife4j:
  enable: true
  basic:
    enable: false
    username: admin
    password: admin
  setting:
    enableFooter: false

renren:
  redis:
    open: true
  xss:
    enabled: true
    exclude-urls:

# Textbook RAG Configuration
textbook:
  upload:
    directory: D:/cheekofinal/xiaozhi-esp32-server/main/manager-api/uploadfile/textbooks
  chunk:
    size: 512
    overlap: 50

# External Services
xiaozhi:
  python:
    server:
      url: http://localhost:8003

# Vector Database (Qdrant Cloud)
qdrant:
  url: https://1198879c-353e-49b1-bfab-8f74004aaf6d.eu-central-1-0.aws.cloud.qdrant.io:6333
  api-key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3MiOiJtIn0.wKcnr3q8Sq4tb7JzPGnZbuxm9XpfDNutdfFD8mCDlrc

# Embeddings (Voyage AI)
voyage:
  api-key: pa-1ai2681JWAAiaAGVPzmVHhiEWmOmwPwVGAfYBBi-oBL

#mybatis
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: xiaozhi.modules.*.entity
  global-config:
    #数据库相关配置
    db-config:
      #主键类型
      id-type: ASSIGN_ID
    banner: false
  #原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: "null"
  configuration-properties:
    prefix:
    blobType: BLOB
    boolValue: TRUE
