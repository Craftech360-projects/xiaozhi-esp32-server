name: Deploy to Azure

on:
  push:
    branches: [ main, develop, feature/*, hotfix/* ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_PACKAGE_PATH: '.'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Set environment based on branch
    - name: Set Environment
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=xiaozhi-prod-rg" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=xiaozhi-staging-rg" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=xiaozhi-dev-rg" >> $GITHUB_ENV
        fi

    # Build Manager API (Java)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('main/manager-api/pom.xml') }}

    - name: Build Manager API
      run: |
        cd main/manager-api
        mvn clean package -DskipTests

    - name: Run Manager API Tests
      run: |
        cd main/manager-api
        mvn test
      continue-on-error: true

    # Build Manager Web (Vue.js)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: main/manager-web/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('main/manager-web/package-lock.json') }}

    - name: Build Manager Web
      run: |
        cd main/manager-web
        npm ci --legacy-peer-deps
        npm run build

    # Build MQTT Gateway (Node.js)
    - name: Build MQTT Gateway
      run: |
        cd main/mqtt-gateway
        npm install --omit=dev

    # Security Scanning
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

    # Upload artifacts
    - name: Upload Manager API artifact
      uses: actions/upload-artifact@v3
      with:
        name: manager-api-jar
        path: main/manager-api/target/xiaozhi-esp32-api.jar

    - name: Upload Manager Web artifact
      uses: actions/upload-artifact@v3
      with:
        name: manager-web-dist
        path: main/manager-web/dist/

    - name: Upload MQTT Gateway artifact
      uses: actions/upload-artifact@v3
      with:
        name: mqtt-gateway-app
        path: main/mqtt-gateway/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v4

    - name: Set Environment
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=xiaozhi-prod-rg" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=xiaozhi-staging-rg" >> $GITHUB_ENV
        fi

    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Deploy Manager API
    - name: Deploy Manager API to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: xiaozhi-${{ env.ENVIRONMENT }}-manager-api
        package: manager-api-jar/xiaozhi-esp32-api.jar

    # Deploy Manager Web
    - name: Deploy Manager Web to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: xiaozhi-${{ env.ENVIRONMENT }}-manager-web
        package: manager-web-dist/

    # Deploy MQTT Gateway
    - name: Deploy MQTT Gateway to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: xiaozhi-${{ env.ENVIRONMENT }}-mqtt-gateway
        package: mqtt-gateway-app/

    # Health checks
    - name: Health Checks
      run: |
        echo "Waiting for services to start..."
        sleep 30

        # Manager API
        for i in {1..30}; do
          if curl -f "https://xiaozhi-${{ env.ENVIRONMENT }}-manager-api.azurewebsites.net/actuator/health" >/dev/null 2>&1; then
            echo "✓ Manager API is healthy"
            break
          elif [ $i -eq 30 ]; then
            echo "✗ Manager API health check failed"
            exit 1
          fi
          sleep 2
        done

        # Manager Web
        for i in {1..15}; do
          if curl -f "https://xiaozhi-${{ env.ENVIRONMENT }}-manager-web.azurewebsites.net" >/dev/null 2>&1; then
            echo "✓ Manager Web is accessible"
            break
          elif [ $i -eq 15 ]; then
            echo "✗ Manager Web health check failed"
            exit 1
          fi
          sleep 2
        done

        # MQTT Gateway
        for i in {1..15}; do
          if curl -f "https://xiaozhi-${{ env.ENVIRONMENT }}-mqtt-gateway.azurewebsites.net/health" >/dev/null 2>&1; then
            echo "✓ MQTT Gateway is healthy"
            break
          elif [ $i -eq 15 ]; then
            echo "✗ MQTT Gateway health check failed"
            exit 1
          fi
          sleep 2
        done

        echo "All services deployed successfully!"